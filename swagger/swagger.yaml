basePath: /
definitions:
  feeds.Feed:
    properties:
      channel:
        type: string
      extra_parameters:
        type: string
      formatted_address:
        type: string
      full_text:
        type: string
      id:
        type: integer
      is_resolved:
        type: boolean
      timestamp:
        type: string
    type: object
  feeds.Result:
    properties:
      entry_id:
        type: integer
      epoch:
        type: integer
      id:
        type: integer
      loc:
        items:
          type: number
        type: array
      timestamp:
        type: string
    type: object
  handler.request:
    properties:
      channel:
        type: string
      id:
        type: string
      metadata:
        additionalProperties: {}
        type: object
      payload:
        type: string
      timestamp:
        type: integer
    type: object
  needs.CreateNeedRequest:
    properties:
      address:
        type: string
      description:
        type: string
    required:
    - address
    - description
    type: object
  needs.LiteNeed:
    properties:
      id:
        type: integer
    type: object
  needs.Need:
    properties:
      description:
        type: string
      extra_parameters:
        type: string
      formatted_address:
        type: string
      id:
        type: integer
      is_resolved:
        type: boolean
      loc:
        items:
          type: number
        type: array
      timestamp:
        type: string
    type: object
  needs.Response:
    properties:
      count:
        type: integer
      results:
        items:
          $ref: '#/definitions/needs.Need'
        type: array
    type: object
host: 127.0.0.1:80
info:
  contact: {}
  description: Afet Harita API
  title: IT Afet YardÄ±m
  version: "1.0"
paths:
  /events:
    post:
      consumes:
      - application/json
      parameters:
      - description: RequestBody
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create Event areas with request body
      tags:
      - Event
  /feeds/{id}:
    get:
      parameters:
      - description: Feed Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/feeds.Feed'
      summary: Get Feeds with given id
      tags:
      - Feed
  /feeds/areas:
    get:
      parameters:
      - description: Sw Lat
        in: query
        name: sw_lat
        required: true
        type: number
      - description: Sw Lng
        in: query
        name: sw_lng
        required: true
        type: number
      - description: Ne Lat
        in: query
        name: ne_lat
        required: true
        type: number
      - description: Ne Lng
        in: query
        name: ne_lng
        required: true
        type: number
      - description: Timestamp
        in: query
        name: time_stamp
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/feeds.Result'
            type: array
      summary: Get Feed areas with query strings
      tags:
      - Feed
  /healthcheck:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Show the status of server.
      tags:
      - Healthcheck
  /needs:
    get:
      parameters:
      - description: Is Only Not Resolved
        in: query
        name: only_not_resolved
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/needs.Response'
      summary: Get Needs
      tags:
      - Need
    post:
      parameters:
      - description: RequestBody
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/needs.CreateNeedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/needs.LiteNeed'
      summary: Create Need
      tags:
      - Need
schemes:
- http
- https
swagger: "2.0"
